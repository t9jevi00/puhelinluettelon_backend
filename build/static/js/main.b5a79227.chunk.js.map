{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","AddNotification","message","className","RemoveNotification","Show","name","handleDelete","number","onClick","SubmitPerson","onSubmit","handleName","handleNumber","value","newName","onChange","newNumber","type","FilterPerson","newFilter","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","addNumber","setAddNumber","removeNumber","setRemoveNumber","filtered","useEffect","personService","initialPersons","console","log","length","filter","person","toLowerCase","includes","event","preventDefault","personObject","map","window","alert","returnedPerson","concat","setTimeout","target","find","confirm","handlePersonRemove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b5a79227.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { \r\n  getAll, \r\n  create, \r\n  update,\r\n  remove \r\n}","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport personService from './services/persons'\n\n/*const Show = ({filter, handleDelete}) => {\n  //console.log(props)\n  return(\n    <div>\n      {filter.map(person => <div key={person.id}> Name: {person.name} Number: {person.number}  Id: {person.id} <button onClick={handleDelete}>Delete</button></div> )}\n    </div>\n  )\n}*/\n\nconst AddNotification = ({message}) => {\n  if(message === null){\n    return null\n  }\n\n  return(\n    <div className='added'>\n      {message}\n    </div>\n  )\n}\n\nconst RemoveNotification = ({message}) => {\n  if(message === null){\n    return null\n  }\n\n  return(\n    <div className='remove'>\n      {message}\n    </div>\n  )\n}\n\nconst Show = ({name, handleDelete, id, number}) => {\n  //console.log(props)\n  return(\n    <li>\n     Name: {name} Number: {number} Id: {id} <button onClick={handleDelete}>Delete</button>\n    </li>\n  )\n}\n\nconst SubmitPerson = ({onSubmit, name, number, handleName, handleNumber}) => {\n  //console.log(name + handleNumberChange)\n  return(\n    <div>\n      <form onSubmit={onSubmit}>\n        <div>\n          name: <input \n          value={name.newName}\n          onChange={handleName}/>\n        </div>\n        <div>\n          number: <input\n          value={number.newNumber}\n          onChange={handleNumber}>\n          </input>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nconst FilterPerson = ({onChange, value}) => {\n  return(\n    <div>\n      search: <input \n        value={value.newFilter}\n        onChange={onChange}>\n        </input>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [newNumber, setNewNumber] =useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [addNumber, setAddNumber] = useState(null)\n  const [removeNumber, setRemoveNumber] = useState(null)\n  let filtered = ''\n\n  /*const hook =() => {\n    console.log('effect')\n    axios\n      .get('http://localhost:3001/persons')\n      .then(response => {\n        console.log('promise fulfilled')\n        setPersons(response.data)\n      })\n  }*/\n  \n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n  console.log('render', persons.length, 'persons')\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    //console.log(\"button clicked\" + event.target)\n    const personObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    //updateNewNumber()\n\n    if(newName.length !== 0 && newNumber.length !== 0){\n      if(persons.map(person => person.name).includes(newName)){\n        window.alert(newName + \"Already exists\")\n      }else{\n        //setNewName('')\n        //setNewNumber('')\n        personService\n          .create(personObject)\n          .then(returnedPerson => {\n            setPersons(persons.concat(returnedPerson))\n            setAddNumber('Added ' + newName)\n            setTimeout(() => {\n              setAddNumber(null)\n            }, 5000)\n            setNewName('')\n            setNewNumber('')\n          })\n        //window.alert(newName + \"Already exists\")\n      }\n    }\n    //setNewName('')\n    //setNewNumber('')\n  }\n\n  const handlePersonRemove = (id) => {\n    const person = persons.find(person => person.id === id)\n    //console.log(persons.find(person => person.id))\n    //console.log(persons.find(person => person.id))\n    //console.log(persons.find(person => person.id === id))\n    \n    console.log(person)\n\n    if(window.confirm(\"Do you want to delete the entry?\")){\n      personService\n    .remove(id, person)\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n    setRemoveNumber('Removed ' + person.name)\n    setTimeout(() => {\n      setRemoveNumber(null)\n    }, 5000)\n    }\n  }\n\n  const updateNewNumber = (id) => {\n    const person = persons.find(person => person.name === id)\n    personService\n      .update(id, person)\n  } \n\n  const handleNameChange = (event) => {\n    //console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    //console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n  \n  const handleFilterChange = (event) => {\n    //console.log(event.target.value)\n    setNewFilter(event.target.value)\n  }\n\n  filtered = persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n  if(filtered.length === 0){\n    filtered = persons\n  }\n\n  //<Show filter={filtered} handleDelete={handlePersonRemove} />\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <div>\n      <AddNotification message={addNumber} /> \n      <RemoveNotification message={removeNumber} />\n      </div>  \n      <div>\n        <SubmitPerson onSubmit={addPerson} handleName={handleNameChange} handleNumber={handleNumberChange} name={newName} number={newNumber}/>\n      </div>\n      <div>\n        <FilterPerson value={newFilter} onChange={handleFilterChange}/>\n      </div>\n      <h2>Numbers</h2>\n      <div>\n        <ul>\n          {filtered.map(person => <Show key={person.id} name={person.name} number={person.number} id={person.id} handleDelete={() => handlePersonRemove(person.id)}/>)}\n        </ul>\n      </div>\n    </div>\n  )\n\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}